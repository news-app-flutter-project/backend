openapi: 3.0.0
info:
    title: test
    contact: {}
    version: '1.0'
servers:
    - url: http://13.209.97.58:8280/api
      variables: {}
paths:
    /auth/login:
        post:
            tags:
                - auth
            summary: login
            operationId: login
            parameters: []
            requestBody:
                description: ''
                content:
                    application/json:
                        schema:
                            allOf:
                                - $ref: '#/components/schemas/loginrequest'
                                - example:
                                      code: 1k4KOo3LYhYeWK7g6wZcreqNlT_y1Dve6Wj70hCsOvJfE4BtFGJN7HqDUKu1rew-2vFmMwo9cxgAAAGIE8SWXg
                        example:
                            code: 1k4KOo3LYhYeWK7g6wZcreqNlT_y1Dve6Wj70hCsOvJfE4BtFGJN7HqDUKu1rew-2vFmMwo9cxgAAAGIE8SWXg
                required: true
            responses:
                '200':
                    description: ''
                    headers: {}
            deprecated: false
    /auth/token_login:
        post:
            tags:
                - auth
            summary: token_login
            operationId: token_login
            parameters: []
            responses:
                '200':
                    description: ''
                    headers: {}
            deprecated: false
            security:
                - bearer: []
    /auth/refresh_tokens:
        post:
            tags:
                - auth
            summary: refresh_tokens
            operationId: refresh_tokens
            parameters: []
            responses:
                '200':
                    description: ''
                    headers: {}
            deprecated: false
            security:
                - bearer: []
    /auth/logout:
        post:
            tags:
                - auth
            summary: logout
            operationId: logout
            parameters: []
            responses:
                '200':
                    description: ''
                    headers: {}
            deprecated: false
            security:
                - bearer: []
    /profile/create_profile:
        post:
            tags:
                - profile
            summary: create_profile
            operationId: create_profile
            parameters: []
            requestBody:
                content:
                    multipart/form-data:
                        encoding: {}
                        schema:
                            required:
                                - image
                                - payload
                            type: object
                            properties:
                                image:
                                    type: string
                                    format: binary
                                payload:
                                    allOf:
                                        - $ref: '#/components/schemas/payload'
                                        - example:
                                              name: 김재혁
                                              birthday: 1996-04-02
                                              sex: female
                                              category:
                                                  - politics
                                                  - lifestyle
                                              age: '30'
                required: false
            responses:
                '200':
                    description: ''
                    headers: {}
            deprecated: false
            security:
                - bearer: []
    /profile/update_img:
        put:
            tags:
                - profile
            summary: update_img
            operationId: update_img
            parameters: []
            requestBody:
                content:
                    multipart/form-data:
                        encoding: {}
                        schema:
                            required:
                                - image
                            type: object
                            properties:
                                image:
                                    type: string
                                    format: binary
                required: false
            responses:
                '200':
                    description: ''
                    headers: {}
            deprecated: false
            security:
                - bearer: []
    /profile/update_screen:
        put:
            tags:
                - profile
            summary: update_screen
            operationId: update_screen
            parameters: []
            requestBody:
                description: ''
                content:
                    application/json:
                        schema:
                            allOf:
                                - $ref: '#/components/schemas/update_screen_request'
                                - example:
                                      mode: dark
                        example:
                            mode: dark
                required: true
            responses:
                '200':
                    description: ''
                    headers: {}
            deprecated: false
            security:
                - bearer: []
    /profile/get_profile:
        get:
            tags:
                - profile
            summary: get_profile
            operationId: get_profile
            parameters: []
            responses:
                '200':
                    description: ''
                    headers: {}
            deprecated: false
            security:
                - bearer: []
    /profile/update_text:
        put:
            tags:
                - profile
            summary: update_text
            operationId: update_text
            parameters: []
            requestBody:
                description: ''
                content:
                    application/json:
                        schema:
                            allOf:
                                - $ref: '#/components/schemas/update_text_request'
                                - example:
                                      text_size: small
                        example:
                            text_size: small
                required: true
            responses:
                '200':
                    description: ''
                    headers: {}
            deprecated: false
            security:
                - bearer: []
    /read:
        post:
            tags:
                - read
            summary: read
            operationId: read
            parameters: []
            requestBody:
                description: ''
                content:
                    application/json:
                        schema:
                            allOf:
                                - $ref: '#/components/schemas/readrequest'
                                - example:
                                      news_id: 101
                        example:
                            news_id: 101
                required: true
            responses:
                '200':
                    description: ''
                    headers: {}
            deprecated: false
            security:
                - bearer: []
    /read/addKeywords:
        put:
            tags:
                - read
            summary: addKeywords
            operationId: addKeywords
            parameters: []
            requestBody:
                description: ''
                content:
                    application/json:
                        schema:
                            allOf:
                                - $ref: '#/components/schemas/addKeywordsRequest'
                                - example:
                                      news_id: 1
                        example:
                            news_id: 1
                required: true
            responses:
                '200':
                    description: ''
                    headers: {}
            deprecated: false
            security:
                - bearer: []
    /news/topNewsByCategory:
        post:
            tags:
                - news
            summary: getTopNewsByCategory
            operationId: getTopNewsByCategory
            parameters: []
            requestBody:
                description: ''
                content:
                    application/json:
                        schema:
                            allOf:
                                - $ref: '#/components/schemas/getTopNewsByCategoryRequest'
                                - example:
                                      category: business
                                      page: 1
                        example:
                            category: business
                            page: 1
                required: true
            responses:
                '200':
                    description: ''
                    headers: {}
            deprecated: false
            security:
                - bearer: []
    /news/topNewsByCategoryAndAge:
        post:
            tags:
                - news
            summary: getTopNewsByCategoryAndAge
            operationId: getTopNewsByCategoryAndAge
            parameters: []
            requestBody:
                description: ''
                content:
                    application/json:
                        schema:
                            allOf:
                                - $ref: '#/components/schemas/getTopNewsByCategoryAndAgeRequest'
                                - example:
                                      category: business
                                      age: '20'
                                      page: 1
                        example:
                            category: business
                            age: '20'
                            page: 1
                required: true
            responses:
                '200':
                    description: ''
                    headers: {}
            deprecated: false
            security:
                - bearer: []
    /news/getTodayTopNews:
        post:
            tags:
                - news
            summary: getTodayTopNews
            operationId: getTodayTopNews
            parameters: []
            requestBody:
                description: ''
                content:
                    application/json:
                        schema:
                            allOf:
                                - $ref: '#/components/schemas/getTodayTopNewsRequest'
                                - example:
                                      page: 1
                        example:
                            page: 1
                required: true
            responses:
                '200':
                    description: ''
                    headers: {}
            deprecated: false
            security:
                - bearer: []
    /news/getTodayTopNewsByAge:
        post:
            tags:
                - news
            summary: getTodayTopNewsByAge
            operationId: getTodayTopNewsByAge
            parameters: []
            requestBody:
                description: ''
                content:
                    application/json:
                        schema:
                            allOf:
                                - $ref: '#/components/schemas/getTodayTopNewsByAgeRequest'
                                - example:
                                      page: 1
                                      age: '20'
                        example:
                            page: 1
                            age: '20'
                required: true
            responses:
                '200':
                    description: ''
                    headers: {}
            deprecated: false
            security:
                - bearer: []
    /search/searchKeyword:
        post:
            tags:
                - search
            summary: addKeyword
            operationId: addKeyword
            parameters: []
            requestBody:
                description: ''
                content:
                    application/json:
                        schema:
                            allOf:
                                - $ref: '#/components/schemas/addKeywordRequest'
                                - example:
                                      keyword: new
                        example:
                            keyword: new
                required: true
            responses:
                '200':
                    description: ''
                    headers: {}
            deprecated: false
            security:
                - bearer: []
    /search/recentSearches:
        get:
            tags:
                - search
            summary: recentSearches
            operationId: recentSearches
            parameters: []
            responses:
                '200':
                    description: ''
                    headers: {}
            deprecated: false
            security:
                - bearer: []
    /search/getTopKeywords:
        get:
            tags:
                - search
            summary: getTopKeywords
            operationId: getTopKeywords
            parameters: []
            responses:
                '200':
                    description: ''
                    headers: {}
            deprecated: false
            security:
                - bearer: []
    /bookmark/bookmark:
        post:
            tags:
                - bookmark
            summary: bookmark
            operationId: bookmark
            parameters: []
            requestBody:
                description: ''
                content:
                    application/json:
                        schema:
                            allOf:
                                - $ref: '#/components/schemas/bookmarkrequest'
                                - example:
                                      news_id: 2
                        example:
                            news_id: 2
                required: true
            responses:
                '200':
                    description: ''
                    headers: {}
            deprecated: false
            security:
                - bearer: []
    /bookmark/listAllBookmarks:
        get:
            tags:
                - bookmark
            summary: bookmarkList
            operationId: bookmarkList
            parameters: []
            responses:
                '200':
                    description: ''
                    headers: {}
            deprecated: false
            security:
                - bearer: []
    /bookmark/createFolder:
        post:
            tags:
                - bookmark
            summary: create_folder
            operationId: create_folder
            parameters: []
            requestBody:
                description: ''
                content:
                    application/json:
                        schema:
                            allOf:
                                - $ref: '#/components/schemas/create_folder_request'
                                - example:
                                      name: test
                        example:
                            name: test
                required: true
            responses:
                '200':
                    description: ''
                    headers: {}
            deprecated: false
            security:
                - bearer: []
    /bookmark/listAllFolders:
        get:
            tags:
                - bookmark
            summary: folderList
            operationId: folderList
            parameters: []
            responses:
                '200':
                    description: ''
                    headers: {}
            deprecated: false
            security:
                - bearer: []
    /bookmark/allocate:
        post:
            tags:
                - bookmark
            summary: allocate
            operationId: allocate
            parameters: []
            requestBody:
                description: ''
                content:
                    application/json:
                        schema:
                            allOf:
                                - $ref: '#/components/schemas/allocaterequest'
                                - example:
                                      bookmark_id: 2
                                      folder_id: 4
                        example:
                            bookmark_id: 2
                            folder_id: 4
                required: true
            responses:
                '200':
                    description: ''
                    headers: {}
            deprecated: false
            security:
                - bearer: []
    /bookmark/listBookmarksFromFolder:
        get:
            tags:
                - bookmark
            summary: listBookmarksFromFolder
            operationId: listBookmarksFromFolder
            parameters: []
            responses:
                '200':
                    description: ''
                    headers: {}
            deprecated: false
            security:
                - bearer: []
    /bookmark/updateFolderName:
        put:
            tags:
                - bookmark
            summary: updateFolderName
            operationId: updateFolderName
            parameters: []
            requestBody:
                description: ''
                content:
                    application/json:
                        schema:
                            allOf:
                                - $ref: '#/components/schemas/updateFolderNameRequest'
                                - example:
                                      folder_id: 2
                                      name: newnew
                        example:
                            folder_id: 2
                            name: newnew
                required: true
            responses:
                '200':
                    description: ''
                    headers: {}
            deprecated: false
            security:
                - bearer: []
    /bookmark/removeBookmarkFromFolder:
        delete:
            tags:
                - bookmark
            summary: removeBookmarkFromFolder
            operationId: removeBookmarkFromFolder
            parameters: []
            responses:
                '200':
                    description: ''
                    headers: {}
            deprecated: false
            security:
                - bearer: []
    /bookmark/deleteBookmark:
        delete:
            tags:
                - bookmark
            summary: removeBookmarkFromFolder1
            operationId: removeBookmarkFromFolder1
            parameters: []
            responses:
                '200':
                    description: ''
                    headers: {}
            deprecated: false
            security:
                - bearer: []
    /bookmark/deleteBookmarkFolder:
        delete:
            tags:
                - bookmark
            summary: deleteBookmarkFolder
            operationId: deleteBookmarkFolder
            parameters: []
            responses:
                '200':
                    description: ''
                    headers: {}
            deprecated: false
            security:
                - bearer: []
    /memo/registerMemo:
        post:
            tags:
                - memo
            summary: registerMemo
            operationId: registerMemo
            parameters: []
            requestBody:
                description: ''
                content:
                    application/json:
                        schema:
                            allOf:
                                - $ref: '#/components/schemas/registerMemoRequest'
                                - example:
                                      news_id: 2
                                      content: sadfasdfasfasfsadfasfsafsadfsadfsajkdfhsajfhllasdhfsadjkhfasdlkjfhaskljfhaskjldfhajlskhdfasjkldhfajklshdfajklshfkasdjlhflajksdhfkladjshfaksjldhfskadjlfhasjkdfhaskljhfaskjlhfaksjdhfkasjlhfaklsjhfkasjdhf
                        example:
                            news_id: 2
                            content: sadfasdfasfasfsadfasfsafsadfsadfsajkdfhsajfhllasdhfsadjkhfasdlkjfhaskljfhaskjldfhajlskhdfasjkldhfajklshdfajklshfkasdjlhflajksdhfkladjshfaksjldhfskadjlfhasjkdfhaskljhfaskjlhfaksjdhfkasjlhfaklsjhfkasjdhf
                required: true
            responses:
                '200':
                    description: ''
                    headers: {}
            deprecated: false
            security:
                - bearer: []
    /memo/updateMemo:
        put:
            tags:
                - memo
            summary: updateMemo
            operationId: updateMemo
            parameters: []
            requestBody:
                description: ''
                content:
                    application/json:
                        schema:
                            allOf:
                                - $ref: '#/components/schemas/updateMemoRequest'
                                - example:
                                      memo_id: 2
                                      content: update
                        example:
                            memo_id: 2
                            content: update
                required: true
            responses:
                '200':
                    description: ''
                    headers: {}
            deprecated: false
            security:
                - bearer: []
    /memo/listMemo:
        get:
            tags:
                - memo
            summary: listMemo
            operationId: listMemo
            parameters: []
            responses:
                '200':
                    description: ''
                    headers: {}
            deprecated: false
            security:
                - bearer: []
    /memo/createFolder:
        post:
            tags:
                - memo
            summary: createFolder
            operationId: createFolder
            parameters: []
            requestBody:
                description: ''
                content:
                    application/json:
                        schema:
                            allOf:
                                - $ref: '#/components/schemas/create_folder_request'
                                - example:
                                      name: test
                        example:
                            name: test
                required: true
            responses:
                '200':
                    description: ''
                    headers: {}
            deprecated: false
            security:
                - bearer: []
    /memo/listFolders:
        get:
            tags:
                - memo
            summary: listFolders
            operationId: listFolders
            parameters: []
            responses:
                '200':
                    description: ''
                    headers: {}
            deprecated: false
            security:
                - bearer: []
    /memo/allocate:
        put:
            tags:
                - memo
            summary: allocate
            operationId: Putallocate
            parameters: []
            requestBody:
                description: ''
                content:
                    application/json:
                        schema:
                            allOf:
                                - $ref: '#/components/schemas/allocaterequest1'
                                - example:
                                      id: 2
                                      folder_id: 2
                        example:
                            id: 2
                            folder_id: 2
                required: true
            responses:
                '200':
                    description: ''
                    headers: {}
            deprecated: false
            security:
                - bearer: []
    /memo/updateFolderName:
        put:
            tags:
                - memo
            summary: updateFolderName
            operationId: PutupdateFolderName
            parameters: []
            requestBody:
                description: ''
                content:
                    application/json:
                        schema:
                            allOf:
                                - $ref: '#/components/schemas/updateFolderNameRequest'
                                - example:
                                      name: update
                                      folder_id: 2
                        example:
                            name: update
                            folder_id: 2
                required: true
            responses:
                '200':
                    description: ''
                    headers: {}
            deprecated: false
            security:
                - bearer: []
    /memo/listmemosFromFolder:
        get:
            tags:
                - memo
            summary: listmemosFromFolder
            operationId: listmemosFromFolder
            parameters: []
            responses:
                '200':
                    description: ''
                    headers: {}
            deprecated: false
            security:
                - bearer: []
    /memo/removeMemoFromFolder:
        delete:
            tags:
                - memo
            summary: removeMemoFromFolder
            operationId: removeMemoFromFolder
            parameters: []
            responses:
                '200':
                    description: ''
                    headers: {}
            deprecated: false
            security:
                - bearer: []
    /memo/deleteMemo:
        delete:
            tags:
                - memo
            summary: deleteMemo
            operationId: deleteMemo
            parameters: []
            responses:
                '200':
                    description: ''
                    headers: {}
            deprecated: false
            security:
                - bearer: []
    /memo/deleteMemoFolder:
        delete:
            tags:
                - memo
            summary: deleteMemoFolder
            operationId: deleteMemoFolder
            parameters: []
            responses:
                '200':
                    description: ''
                    headers: {}
            deprecated: false
            security:
                - bearer: []
components:
    schemas:
        loginrequest:
            title: loginrequest
            required:
                - code
            type: object
            properties:
                code:
                    type: string
            example:
                code: 1k4KOo3LYhYeWK7g6wZcreqNlT_y1Dve6Wj70hCsOvJfE4BtFGJN7HqDUKu1rew-2vFmMwo9cxgAAAGIE8SWXg
        payload:
            title: payload
            required:
                - name
                - birthday
                - sex
                - category
                - age
            type: object
            properties:
                name:
                    type: string
                birthday:
                    type: string
                sex:
                    type: string
                category:
                    type: array
                    items:
                        type: string
                    description: ''
                age:
                    type: string
            example:
                name: 김재혁
                birthday: 1996-04-02
                sex: female
                category:
                    - politics
                    - lifestyle
                age: '30'
        update_screen_request:
            title: update_screen_request
            required:
                - mode
            type: object
            properties:
                mode:
                    type: string
            example:
                mode: dark
        update_text_request:
            title: update_text_request
            required:
                - text_size
            type: object
            properties:
                text_size:
                    type: string
            example:
                text_size: small
        readrequest:
            title: readrequest
            required:
                - news_id
            type: object
            properties:
                news_id:
                    type: integer
                    format: int32
            example:
                news_id: 101
        addKeywordsRequest:
            title: addKeywordsRequest
            required:
                - news_id
            type: object
            properties:
                news_id:
                    type: integer
                    format: int32
            example:
                news_id: 1
        getTopNewsByCategoryRequest:
            title: getTopNewsByCategoryRequest
            required:
                - category
                - page
            type: object
            properties:
                category:
                    type: string
                page:
                    type: integer
                    format: int32
            example:
                category: business
                page: 1
        getTopNewsByCategoryAndAgeRequest:
            title: getTopNewsByCategoryAndAgeRequest
            required:
                - category
                - age
                - page
            type: object
            properties:
                category:
                    type: string
                age:
                    type: string
                page:
                    type: integer
                    format: int32
            example:
                category: business
                age: '20'
                page: 1
        getTodayTopNewsRequest:
            title: getTodayTopNewsRequest
            required:
                - page
            type: object
            properties:
                page:
                    type: integer
                    format: int32
            example:
                page: 1
        getTodayTopNewsByAgeRequest:
            title: getTodayTopNewsByAgeRequest
            required:
                - page
                - age
            type: object
            properties:
                page:
                    type: integer
                    format: int32
                age:
                    type: string
            example:
                page: 1
                age: '20'
        addKeywordRequest:
            title: addKeywordRequest
            required:
                - keyword
            type: object
            properties:
                keyword:
                    type: string
            example:
                keyword: new
        bookmarkrequest:
            title: bookmarkrequest
            required:
                - news_id
            type: object
            properties:
                news_id:
                    type: integer
                    format: int32
            example:
                news_id: 2
        create_folder_request:
            title: create_folder_request
            required:
                - name
            type: object
            properties:
                name:
                    type: string
            example:
                name: test
        allocaterequest:
            title: allocaterequest
            required:
                - bookmark_id
                - folder_id
            type: object
            properties:
                bookmark_id:
                    type: integer
                    format: int32
                folder_id:
                    type: integer
                    format: int32
            example:
                bookmark_id: 2
                folder_id: 4
        updateFolderNameRequest:
            title: updateFolderNameRequest
            required:
                - folder_id
                - name
            type: object
            properties:
                folder_id:
                    type: integer
                    format: int32
                name:
                    type: string
            example:
                folder_id: 2
                name: newnew
        removeBookmarkFromFolderRequest:
            title: removeBookmarkFromFolderRequest
            required:
                - bookmark_id
            type: object
            properties:
                bookmark_id:
                    type: integer
                    format: int32
            example:
                bookmark_id: 1
        deleteBookmarkFolderRequest:
            title: deleteBookmarkFolderRequest
            required:
                - folder_id
            type: object
            properties:
                folder_id:
                    type: integer
                    format: int32
            example:
                folder_id: 1
        registerMemoRequest:
            title: registerMemoRequest
            required:
                - news_id
                - content
            type: object
            properties:
                news_id:
                    type: integer
                    format: int32
                content:
                    type: string
            example:
                news_id: 2
                content: sadfasdfasfasfsadfasfsafsadfsadfsajkdfhsajfhllasdhfsadjkhfasdlkjfhaskljfhaskjldfhajlskhdfasjkldhfajklshdfajklshfkasdjlhflajksdhfkladjshfaksjldhfskadjlfhasjkdfhaskljhfaskjlhfaksjdhfkasjlhfaklsjhfkasjdhf
        updateMemoRequest:
            title: updateMemoRequest
            required:
                - memo_id
                - content
            type: object
            properties:
                memo_id:
                    type: integer
                    format: int32
                content:
                    type: string
            example:
                memo_id: 2
                content: update
        allocaterequest1:
            title: allocaterequest1
            required:
                - id
                - folder_id
            type: object
            properties:
                id:
                    type: integer
                    format: int32
                folder_id:
                    type: integer
                    format: int32
            example:
                id: 2
                folder_id: 2
        removeMemoFromFolderRequest:
            title: removeMemoFromFolderRequest
            required:
                - id
            type: object
            properties:
                id:
                    type: integer
                    format: int32
            example:
                id: 1
        deleteMemoRequest:
            title: deleteMemoRequest
            required:
                - id
            type: object
            properties:
                id:
                    type: integer
                    format: int32
            example:
                id: 1
        deleteMemoFolderRequest:
            title: deleteMemoFolderRequest
            required:
                - folder_id
            type: object
            properties:
                folder_id:
                    type: integer
                    format: int32
            example:
                folder_id: 1
    securitySchemes:
        bearer:
            type: http
            scheme: bearer
security: []
tags:
    - name: auth
    - name: profile
    - name: read
    - name: news
    - name: search
    - name: bookmark
    - name: memo
